<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置查询所有 -->
<mapper namespace="com.chm.dao.IUserDao">
    <!-- 查询所有 -->
    <select id="findAll" resultType="User">
        select * from user
    </select>

    <!-- 保存(插入) -->
    <insert id="saveUser" parameterType="user">
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into user(username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address})
    </insert>

    <!-- 更新 -->
    <update id="updateUser" parameterType="com.chm.domain.User">
        update user set username=#{username}, birthday=#{birthday}, sex=#{sex}, address=#{address} where id=#{id}
    </update>

    <!-- 删除 -->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{id}
    </delete>

    <!-- 查询一个 -->
    <select id="findById" parameterType="int" resultType="USER">
        select * from user where id = #{id}
    </select>

    <!-- 根据username模糊查询 -->
    <select id="findByName" parameterType="String" resultType="com.chm.domain.User">
        select * from user where username like #{name}
    </select>

    <!-- 统计总记录数 -->
    <select id="countTotal" resultType="int">
        select count(id) from user
    </select>


    <!-- parameterType(传入参数的类型)：
            1.简单类型(int/String/Integer)
            2.pojo对象(JavaBean/实体类对象，在此程序中为User对象)
            3.pojo包装对象(在此程序中为QueryVo对象)
                广泛应用：由多个对象组成一个查询条件时常用pojo包装对象。
    -->
    <!-- 根据queryVo模糊查询 -->
    <select id="findUserByVo" parameterType="com.chm.domain.QueryVo" resultType="com.chm.domain.User">
        select * from user where username like #{user.username}
    </select>
</mapper>
